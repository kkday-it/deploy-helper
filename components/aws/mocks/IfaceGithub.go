// Code generated by mockery v2.3.0. DO NOT EDIT.

package mocks

import (
	github "github.com/google/go-github/github"
	mock "github.com/stretchr/testify/mock"
)

// IfaceGithub is an autogenerated mock type for the IfaceGithub type
type IfaceGithub struct {
	mock.Mock
}

// GetReleaseByTag provides a mock function with given fields: owner, repo, tag
func (_m *IfaceGithub) GetReleaseByTag(owner string, repo string, tag string) (*github.RepositoryRelease, error) {
	ret := _m.Called(owner, repo, tag)

	var r0 *github.RepositoryRelease
	if rf, ok := ret.Get(0).(func(string, string, string) *github.RepositoryRelease); ok {
		r0 = rf(owner, repo, tag)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*github.RepositoryRelease)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string, string) error); ok {
		r1 = rf(owner, repo, tag)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetReleaseURL provides a mock function with given fields: owner, repo, tag
func (_m *IfaceGithub) GetReleaseURL(owner string, repo string, tag string) string {
	ret := _m.Called(owner, repo, tag)

	var r0 string
	if rf, ok := ret.Get(0).(func(string, string, string) string); ok {
		r0 = rf(owner, repo, tag)
	} else {
		r0 = ret.Get(0).(string)
	}

	return r0
}
